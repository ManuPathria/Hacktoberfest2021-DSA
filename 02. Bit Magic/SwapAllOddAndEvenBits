//Given an unsigned integer N. The task is to swap all odd bits with even bits. For example, if the given number is 23 (00010111), it should be converted to 43(00101011). 
// Input: N = 23
// Output: 43
// Here,Binary representation of the given number 23 is 00010111 after swapping 00101011 = 43 in decimal.
class Solution
{
    public:
    //Function to swap odd and even bits.
    unsigned int swapBits(unsigned int n)
    {
        //0xAAAAAAAA means 10101010101010101010101010101010 in binary.
        //we get all even bits of n.
    	unsigned int ev=n & 0xAAAAAAAA; 
    	//0x55555555 means 01010101010101010101010101010101 in binary.
    	//we get all odd bits of n.
    	unsigned int od=n & 0x55555555; 
    	
    	//right Shifting the even bits obtained previously.
    	ev>>=1;
    	//left Shifting the odd bits obtained previously.
    	od<<=1;
    	
    	//doing bitwise OR of even and odd bits obtained and
    	//returning the final result.
    	return (ev | od);
    }
};
